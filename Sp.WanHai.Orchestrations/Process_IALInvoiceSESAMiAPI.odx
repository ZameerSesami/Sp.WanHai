#if __DESIGNER_DATA
#error Do not define __DESIGNER_DATA.
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<om:MetaModel MajorVersion="1" MinorVersion="3" Core="2b131234-7959-458d-834f-2dc0769ce683" ScheduleModel="66366196-361d-448d-976f-cab5e87496d2" xmlns:om="http://schemas.microsoft.com/BizTalk/2003/DesignerData">
    <om:Element Type="Module" OID="851e1a92-4104-42bb-a96c-8c8d79d6e7f0" LowerBound="1.1" HigherBound="586.1">
        <om:Property Name="ReportToAnalyst" Value="True" />
        <om:Property Name="Name" Value="Sp.WanHai.Orchestrations" />
        <om:Property Name="Signal" Value="False" />
        <om:Element Type="PortType" OID="a2ea6555-6cc6-440d-a87f-0362beb07971" ParentLink="Module_PortType" LowerBound="4.1" HigherBound="11.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_RcvIALInvoicesPoll" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="1db86996-ff4d-484a-908c-92ad339e31a9" ParentLink="PortType_OperationDeclaration" LowerBound="6.1" HigherBound="10.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="556b0e1a-30ba-4b39-acf5-4703e59265d8" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="8.13" HigherBound="8.111">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPolling" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="4b113c75-7364-472a-9ddd-c56b85552edd" ParentLink="Module_PortType" LowerBound="11.1" HigherBound="18.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvIALInvoiceDetails" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="611c9838-8dae-4d80-a3b7-afac12a3e19b" ParentLink="PortType_OperationDeclaration" LowerBound="13.1" HigherBound="17.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="a3c292fd-d17b-41a9-9a95-d31cca6d2ffe" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="15.13" HigherBound="15.90">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetails" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="9fd04721-dbe5-42f0-aaa7-9f0b1b1f5b11" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="15.92" HigherBound="15.177">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetailsResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="734acdf4-310a-4a5f-88c8-7e049316d553" ParentLink="Module_PortType" LowerBound="18.1" HigherBound="25.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndDynIALPeppolInvoiceXML" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="1d2035c0-ed93-42d3-aaaf-4b8a9cfc9576" ParentLink="PortType_OperationDeclaration" LowerBound="20.1" HigherBound="24.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="e9552c35-aa2f-4080-a529-51367094267c" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="22.13" HigherBound="22.44">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.PeppolInvoice" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="dcdf436a-5171-451e-8f08-4e76df033bb9" ParentLink="Module_PortType" LowerBound="25.1" HigherBound="32.1">
            <om:Property Name="Synchronous" Value="True" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndRcvIALInvAPIStatusUpd" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="db1102f6-c056-465b-9d97-1386d42f42c6" ParentLink="PortType_OperationDeclaration" LowerBound="27.1" HigherBound="31.1">
                <om:Property Name="OperationType" Value="RequestResponse" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="24b41485-e6bc-4414-ad36-28137943637b" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="29.13" HigherBound="29.94">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpd" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="MessageRef" OID="0d755af5-5e3e-4097-8628-77909b3fd635" ParentLink="OperationDeclaration_ResponseMessageRef" LowerBound="29.96" HigherBound="29.185">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpdResponse" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Response" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="fb6f534e-151d-4df0-8b67-a158cc7415bd" ParentLink="Module_PortType" LowerBound="32.1" HigherBound="39.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndIALErrorEmail" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="ddaddfc2-9efa-4bf7-9507-4a507a8f69b0" ParentLink="PortType_OperationDeclaration" LowerBound="34.1" HigherBound="38.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="21c1ab82-82c5-4d59-a2d5-e990192940dd" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="36.13" HigherBound="36.32">
                    <om:Property Name="Ref" Value="Sp.WanHai.Orchestrations.msgMultiErrorEmails" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="PortType" OID="7ac2e696-6550-410e-a05d-b69d6fb3073e" ParentLink="Module_PortType" LowerBound="39.1" HigherBound="46.1">
            <om:Property Name="Synchronous" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="PortType_SndDynIALPeppolCNXML" />
            <om:Property Name="Signal" Value="False" />
            <om:Element Type="OperationDeclaration" OID="5853c1c9-dd52-46a9-81be-c4741d4e1d1f" ParentLink="PortType_OperationDeclaration" LowerBound="41.1" HigherBound="45.1">
                <om:Property Name="OperationType" Value="OneWay" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Operation_1" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="MessageRef" OID="04644456-0dbd-4922-976a-9da5a0ab3342" ParentLink="OperationDeclaration_RequestMessageRef" LowerBound="43.13" HigherBound="43.47">
                    <om:Property Name="Ref" Value="Sp.WanHai.Schemas.PeppolCreditNote" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Request" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type="ServiceDeclaration" OID="fa13b330-0bb7-4f27-8501-cf61ca81cae8" ParentLink="Module_ServiceDeclaration" LowerBound="46.1" HigherBound="585.1">
            <om:Property Name="InitializedTransactionType" Value="False" />
            <om:Property Name="IsInvokable" Value="False" />
            <om:Property Name="TypeModifier" Value="Internal" />
            <om:Property Name="ReportToAnalyst" Value="True" />
            <om:Property Name="Name" Value="Process_IALInvoiceSESAMiAPI" />
            <om:Property Name="Signal" Value="True" />
            <om:Element Type="VariableDeclaration" OID="024679df-932a-4b44-87dd-c85e2024cdeb" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="77.1" HigherBound="78.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Xml.XmlDocument" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varTempXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="5d6c2ca4-143b-4949-8de0-5ec7e4bdde92" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="78.1" HigherBound="79.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varSSOPeppolIdType" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="13fc7027-edc5-4289-a5d5-83d82ebf62b0" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="79.1" HigherBound="80.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varSSOFileStorePath" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2c112cac-7432-483d-95c8-1ed7c4e063ad" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="80.1" HigherBound="81.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="Sp.WanHai.CallAPI.PostPeppolXMLData" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varobjPeppolAPI" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="0928bfe2-3a12-436e-bfd8-22cbc223eda6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="81.1" HigherBound="82.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopItem" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="542b2dc3-a9c3-4a04-8391-27137d66e177" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="82.1" HigherBound="83.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varLoopCounter" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="c6ced3cd-f85d-4ba5-8c99-b219e6fc77c6" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="83.1" HigherBound="84.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varFullXMLPath" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="1ba68282-95d1-4e7a-afcd-8c7516e74061" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="84.1" HigherBound="85.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varExceptionmsg" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="e19f99cd-b5b8-4362-a7fe-7ad67ad06436" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="85.1" HigherBound="86.1">
                <om:Property Name="UseDefaultConstructor" Value="True" />
                <om:Property Name="Type" Value="System.Text.StringBuilder" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varEmailBody" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="9460356f-3bcd-4719-9347-dc8c41234864" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="86.1" HigherBound="87.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varDocId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="1e0e4ea1-2a28-4a10-96d4-52166e88547a" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="87.1" HigherBound="88.1">
                <om:Property Name="InitialValue" Value="0" />
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.Int32" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varDocCount" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="a316801b-98f2-4146-99db-aa65672d5eab" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="88.1" HigherBound="89.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varCurrDate" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="b78713cb-b4b4-4236-850d-ba0e9d627148" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="89.1" HigherBound="90.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="a828fce7-6fd0-4903-82ce-d90e51da892b" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="90.1" HigherBound="91.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIRespStatus" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="f8ef108e-0274-42a9-804e-7b7fd7745929" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="91.1" HigherBound="92.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="5b5de079-0a20-4548-bad8-c8a67e905bd3" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="92.1" HigherBound="93.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIErrorMessage" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="7d093099-a582-49d7-9d28-8d2c6401ae9a" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="93.1" HigherBound="94.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varAPIDate" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="2533a751-df1d-4af1-89e4-581868ff25e3" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="94.1" HigherBound="95.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvoiceNo" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="487fc740-787e-4536-a30a-5a4adc2cbe39" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="95.1" HigherBound="96.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varInvoiceTypeCode" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="VariableDeclaration" OID="f812441e-052e-44b4-8c23-54a748b57e0e" ParentLink="ServiceDeclaration_VariableDeclaration" LowerBound="96.1" HigherBound="97.1">
                <om:Property Name="UseDefaultConstructor" Value="False" />
                <om:Property Name="Type" Value="System.String" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="varSupplierTIN" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="68d68258-7a9e-4915-919a-52f47f3ac1d5" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="63.1" HigherBound="64.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.PeppolCreditNote" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolXMLCreditNoteCopy" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="7702466d-9de9-43cf-b3e3-dcdca584a1b2" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="64.1" HigherBound="65.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.PeppolCreditNote" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolXMLCreditNote" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="d92fa1d4-8ed1-4aee-9f8d-25feacce308d" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="65.1" HigherBound="66.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetailsResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspInvDetResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="0c499ac7-e6be-4069-b7e4-5612e7df9dfe" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="66.1" HigherBound="67.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetails" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msguspInvDetailsReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="c425e825-edae-4a98-961a-8d31a1e61d8f" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="67.1" HigherBound="68.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.SSOValues" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgSSOValues" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="0f73d39d-7664-43e1-8406-13164e54372f" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="68.1" HigherBound="69.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPollingResultSet0" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgSingleDocId" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="34588b91-6230-476d-85f8-c50820cb50b2" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="69.1" HigherBound="70.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPolling" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPollInvoices" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="ca43cd08-9c23-46de-ab42-4049d2958b74" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="70.1" HigherBound="71.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.PeppolInvoice" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolXMLCopy" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="5f4102d2-14ef-4ebe-915e-2b39449af2c4" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="71.1" HigherBound="72.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.PeppolInvoice" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolXML" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="d03336cb-c242-47f6-bf2f-53ee537a9604" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="72.1" HigherBound="73.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.PeppolAPIResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgPeppolAPIResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="8070a253-2b82-480f-babc-3e9f62290af0" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="73.1" HigherBound="74.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpdResponse" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgInvAPIStatusUpdResp" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="7da6edcd-eef3-42ad-80d1-aaaf0b18222a" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="74.1" HigherBound="75.1">
                <om:Property Name="Type" Value="Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpd" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgInvAPIStatusUpdReq" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="57eb62ac-e6eb-452f-9894-42ba19b4dc1d" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="75.1" HigherBound="76.1">
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.msgMultiErrorLogs" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgErrorLogs" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="MessageDeclaration" OID="5e9343fc-8eaf-4ac1-be24-c496a46b7a59" ParentLink="ServiceDeclaration_MessageDeclaration" LowerBound="76.1" HigherBound="77.1">
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.msgMultiErrorEmails" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="msgErrorEmail" />
                <om:Property Name="Signal" Value="True" />
            </om:Element>
            <om:Element Type="ServiceBody" OID="fd761816-e2ea-4499-9e6b-41ae1e898c5d" ParentLink="ServiceDeclaration_ServiceBody">
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="Receive" OID="c3b2cd62-2cb2-4978-b512-f8f9ad4bf525" ParentLink="ServiceBody_Statement" LowerBound="99.1" HigherBound="121.1">
                    <om:Property Name="Activate" Value="True" />
                    <om:Property Name="PortName" Value="Port_RcvIALInvoicesPoll" />
                    <om:Property Name="MessageName" Value="msgPollInvoices" />
                    <om:Property Name="OperationName" Value="Operation_1" />
                    <om:Property Name="OperationMessageName" Value="Request" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Receive_1" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
                <om:Element Type="VariableAssignment" OID="5c09e6a0-f199-472f-a01c-a6fb42a12f1b" ParentLink="ServiceBody_Statement" LowerBound="121.1" HigherBound="125.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;WHL_IAL SESAMi API Process Start&quot;,&quot;WHL_IAL SESAMi API Process Started&quot;);&#xD;&#xA;varDocCount = xpath(msgPollInvoices,&quot;count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='DocumentID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL'])&quot;);&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;WHL_IAL SESAMi API Doc Count&quot;,varDocCount.ToString());&#xD;&#xA;" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_Start" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
                <om:Element Type="While" OID="5b776b7b-89d2-48ae-a1ac-0033bb2cf3f0" ParentLink="ServiceBody_Statement" LowerBound="125.1" HigherBound="581.1">
                    <om:Property Name="Expression" Value="varLoopCounter &lt; varDocCount" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Loop_DocumentIds" />
                    <om:Property Name="Signal" Value="True" />
                    <om:Element Type="Scope" OID="7b88fc1b-f681-4434-8fab-d2ad498d59ac" ParentLink="ComplexStatement_Statement" LowerBound="128.1" HigherBound="578.1">
                        <om:Property Name="InitializedTransactionType" Value="True" />
                        <om:Property Name="IsSynchronized" Value="False" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="Scope_PeppolXml" />
                        <om:Property Name="Signal" Value="True" />
                        <om:Element Type="VariableAssignment" OID="56936fe4-5fbd-42c4-a273-3a9677b0a479" ParentLink="ComplexStatement_Statement" LowerBound="133.1" HigherBound="136.1">
                            <om:Property Name="Expression" Value="varLoopCounter = varLoopCounter + 1;&#xD;&#xA;varLoopItem = varLoopCounter.ToString();" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Incr_Counter" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Construct" OID="266358a8-ad3d-4678-b1ee-b32599c27c53" ParentLink="ComplexStatement_Statement" LowerBound="136.1" HigherBound="144.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_SingleDocId" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="f92ddd79-ab1f-416a-9ebf-5d3fe6dbbe47" ParentLink="ComplexStatement_Statement" LowerBound="139.1" HigherBound="143.1">
                                <om:Property Name="Expression" Value="msgSingleDocId = xpath(msgPollInvoices, &quot;/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL'][&quot;+ varLoopItem +&quot;]&quot; );&#xD;&#xA;varDocId = msgSingleDocId.DocumentID;&#xD;&#xA;&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MsgAssign_InvoiceHeaderRequest" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="1aeb839e-2d1b-4863-a6da-d76f7844baa7" ParentLink="Construct_MessageRef" LowerBound="137.35" HigherBound="137.49">
                                <om:Property Name="Ref" Value="msgSingleDocId" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="Construct" OID="8b5cffc6-885e-4f79-8780-c7fe39ae6c98" ParentLink="ComplexStatement_Statement" LowerBound="144.1" HigherBound="152.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_GetInvoiceData" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="28431376-b699-4616-a564-596bf2f65462" ParentLink="ComplexStatement_Statement" LowerBound="147.1" HigherBound="151.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfaceWHLInvoiceDetails xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:DocumentID&gt;&quot; + varDocId + &quot;&lt;/ns0:DocumentID&gt;&lt;/ns0:InterfaceWHLInvoiceDetails&gt;&quot;);&#xD;&#xA;msguspInvDetailsReq = varTempXML;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_6" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="c3bee1d2-674e-44b9-83cb-09263f06d9de" ParentLink="Construct_MessageRef" LowerBound="145.35" HigherBound="145.54">
                                <om:Property Name="Ref" Value="msguspInvDetailsReq" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="b451ea1d-70ac-4665-99ba-961f15fdc4d6" ParentLink="ComplexStatement_Statement" LowerBound="152.1" HigherBound="167.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msguspInvDetailsReq;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetailsReq&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetailsReq&quot;,varTempXML.OuterXml.Substring(1,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ShowLogs" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Send" OID="4f249020-d40b-4c95-8bb9-f2373a4a4567" ParentLink="ComplexStatement_Statement" LowerBound="167.1" HigherBound="169.1">
                            <om:Property Name="PortName" Value="Port_SndRcvIALInvoiceDetails" />
                            <om:Property Name="MessageName" Value="msguspInvDetailsReq" />
                            <om:Property Name="OperationName" Value="Operation_1" />
                            <om:Property Name="OperationMessageName" Value="Request" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Send_2" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Receive" OID="b436e91b-623f-4a3e-b692-127cdb845aa8" ParentLink="ComplexStatement_Statement" LowerBound="169.1" HigherBound="171.1">
                            <om:Property Name="Activate" Value="False" />
                            <om:Property Name="PortName" Value="Port_SndRcvIALInvoiceDetails" />
                            <om:Property Name="MessageName" Value="msguspInvDetResp" />
                            <om:Property Name="OperationName" Value="Operation_1" />
                            <om:Property Name="OperationMessageName" Value="Response" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Receive_2" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="ed259400-4bb5-44ad-a82c-12dd3564a343" ParentLink="ComplexStatement_Statement" LowerBound="171.1" HigherBound="176.1">
                            <om:Property Name="Expression" Value="varInvoiceNo = xpath(msguspInvDetResp,&quot;string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='InvoiceNumber' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())&quot;);&#xD;&#xA;varSSOPeppolIdType = Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;PeppolId_Type&quot;);&#xD;&#xA;varInvoiceTypeCode = xpath(msguspInvDetResp,&quot;string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='InvoiceTypeCode' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())&quot;);&#xD;&#xA;varSupplierTIN = xpath(msguspInvDetResp,&quot;string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='SellerTIN' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())&quot;);" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="AssignVar" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Construct" OID="a0497ae7-1445-48f1-aa56-66a6273ae208" ParentLink="ComplexStatement_Statement" LowerBound="176.1" HigherBound="186.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_SSO" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageAssignment" OID="3de8e608-9cbd-4a93-8c8b-e9b9a30d2c1c" ParentLink="ComplexStatement_Statement" LowerBound="179.1" HigherBound="185.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;Root&gt;&lt;PeppolIdType&gt;&quot; + varSSOPeppolIdType + &quot;&lt;/PeppolIdType&gt;&lt;HubID&gt;IAL&lt;/HubID&gt;&lt;/Root&gt;&quot;);&#xD;&#xA;msgSSOValues = varTempXML;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_2" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageRef" OID="d0fd02c6-c166-4912-8b31-0e0e76fddd36" ParentLink="Construct_MessageRef" LowerBound="177.35" HigherBound="177.47">
                                <om:Property Name="Ref" Value="msgSSOValues" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="0eeec38a-4416-4ddc-bebc-e52388785d3a" ParentLink="ComplexStatement_Statement" LowerBound="186.1" HigherBound="202.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;SSOPeppolId&quot;,varSSOPeppolIdType);&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgSSOValues;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSSOValues&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgSSOValues&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ShowLogs" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Decision" OID="b118e3bb-55c4-4496-a266-7b1c3a88f4b5" ParentLink="ComplexStatement_Statement" LowerBound="202.1" HigherBound="465.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Chk_Invoice_CreditNote" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="DecisionBranch" OID="3016c8d5-5251-4801-980f-fce12ee3d3bd" ParentLink="ReallyComplexStatement_Branch" LowerBound="203.25" HigherBound="334.1">
                                <om:Property Name="Expression" Value="varInvoiceTypeCode == &quot;380&quot;" />
                                <om:Property Name="IsGhostBranch" Value="True" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="If_Invoice" />
                                <om:Property Name="Signal" Value="False" />
                                <om:Element Type="Construct" OID="5d54aaf8-c7ce-4524-8a96-6d3ba1269148" ParentLink="ComplexStatement_Statement" LowerBound="205.1" HigherBound="211.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="PeppolXML_Invoice" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="Transform" OID="2154211d-4aac-47fa-8ba0-81ae4713ee7f" ParentLink="ComplexStatement_Statement" LowerBound="208.1" HigherBound="210.1">
                                        <om:Property Name="ClassName" Value="Sp.WanHai.Orchestrations.Map_DBResp_PeppolInvXML" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="Transform_2" />
                                        <om:Property Name="Signal" Value="True" />
                                        <om:Element Type="MessagePartRef" OID="7c87a535-82c2-4d7f-9b53-21ba6fd9da0e" ParentLink="Transform_InputMessagePartRef" LowerBound="209.110" HigherBound="209.126">
                                            <om:Property Name="MessageRef" Value="msguspInvDetResp" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_4" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                        <om:Element Type="MessagePartRef" OID="b8d1a2ff-b4bc-4187-8b6e-cbeecba59154" ParentLink="Transform_InputMessagePartRef" LowerBound="209.128" HigherBound="209.140">
                                            <om:Property Name="MessageRef" Value="msgSSOValues" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_5" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                        <om:Element Type="MessagePartRef" OID="4e7d282d-2c73-477f-9b15-00f4a96a7b16" ParentLink="Transform_OutputMessagePartRef" LowerBound="209.44" HigherBound="209.56">
                                            <om:Property Name="MessageRef" Value="msgPeppolXML" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_6" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type="MessageRef" OID="37813895-5504-4c55-9574-222d18d1265c" ParentLink="Construct_MessageRef" LowerBound="206.39" HigherBound="206.51">
                                        <om:Property Name="Ref" Value="msgPeppolXML" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="f5978721-6e60-4b6b-905a-c3d8e5eccfcd" ParentLink="ComplexStatement_Statement" LowerBound="211.1" HigherBound="217.1">
                                    <om:Property Name="Expression" Value="varCurrDate = System.DateTime.Now.ToString(&quot;yyyyMMdd&quot;);&#xD;&#xA;varSSOFileStorePath=Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;FileStorePath&quot;);&#xD;&#xA;&#xD;&#xA;varFullXMLPath=varSSOFileStorePath+&quot;\\&quot;+varCurrDate+&quot;\\WHL\\Outbound\\Invoice&quot;;&#xD;&#xA;System.IO.Directory.CreateDirectory(varFullXMLPath);" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="SavePeppolXML" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="Construct" OID="8e91ac92-7016-4ea9-a855-2d887a3d13ff" ParentLink="ComplexStatement_Statement" LowerBound="217.1" HigherBound="236.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolXML" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageAssignment" OID="1b3f092e-840f-4b88-a122-c630878269a1" ParentLink="ComplexStatement_Statement" LowerBound="220.1" HigherBound="235.1">
                                        <om:Property Name="Expression" Value="msgPeppolXMLCopy=Sp.WanHai.Common.RemoveEmptyNodes.RemoveEmptyNodesFromXml(msgPeppolXML);&#xD;&#xA;&#xD;&#xA;msgPeppolXMLCopy(FILE.CopyMode) = 2; //overwrite;&#xD;&#xA;&#xD;&#xA;Port_SndDynIALPeppolInvoiceXML(Microsoft.XLANGs.BaseTypes.Address)=@&quot;file://&quot;+varFullXMLPath+&quot;//&quot;+varDocId+&quot;.xml&quot;;&#xD;&#xA;&#xD;&#xA;Port_SndDynIALPeppolInvoiceXML(Microsoft.XLANGs.BaseTypes.TransportType)=&quot;FILE&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                        <om:Property Name="Name" Value="MessageAssignment_3" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="MessageRef" OID="be363590-0435-4956-b90e-ae1ae4545d2f" ParentLink="Construct_MessageRef" LowerBound="218.39" HigherBound="218.55">
                                        <om:Property Name="Ref" Value="msgPeppolXMLCopy" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="Send" OID="95d6441c-bb48-487f-9ae5-7a91e4d12688" ParentLink="ComplexStatement_Statement" LowerBound="236.1" HigherBound="238.1">
                                    <om:Property Name="PortName" Value="Port_SndDynIALPeppolInvoiceXML" />
                                    <om:Property Name="MessageName" Value="msgPeppolXMLCopy" />
                                    <om:Property Name="OperationName" Value="Operation_1" />
                                    <om:Property Name="OperationMessageName" Value="Request" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Send_5" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="472fbc9b-391c-426f-96b4-7ba3cbb00fa6" ParentLink="ComplexStatement_Statement" LowerBound="238.1" HigherBound="263.1">
                                    <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msguspInvDetResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetResp&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgPeppolXMLCopy;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXMLCopy&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXMLCopy&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="ShowLogs" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="9ee62496-3fb0-4d90-9de1-d52d5efec2e3" ParentLink="ComplexStatement_Statement" LowerBound="263.1" HigherBound="277.1">
                                    <om:Property Name="Expression" Value="varTempXML = msgPeppolXMLCopy;&#xD;&#xA;varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,&quot;IAL&quot;,&quot;Invoice&quot;);&#xD;&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    if(varAPIResp.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp.Substring(0,29500));&#xA;    }&#xA;}" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Call_API_Peppol" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="Construct" OID="e75509f8-78d4-401e-b64a-9c6abfa2c5c4" ParentLink="ComplexStatement_Statement" LowerBound="277.1" HigherBound="287.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolAPIResp" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageRef" OID="31f6e1bc-486d-4c65-9438-a88b7c6d7986" ParentLink="Construct_MessageRef" LowerBound="278.39" HigherBound="278.55">
                                        <om:Property Name="Ref" Value="msgPeppolAPIResp" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="MessageAssignment" OID="f362dad4-3fb7-4b48-9882-69196e570682" ParentLink="ComplexStatement_Statement" LowerBound="280.1" HigherBound="286.1">
                                        <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xA;varTempXML.LoadXml(varAPIResp);&#xA;msgPeppolAPIResp = varTempXML;&#xA;&#xA;varAPIRespStatus = xpath(msgPeppolAPIResp,&quot;string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())&quot;);" />
                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                        <om:Property Name="Name" Value="MessageAssignment_1" />
                                        <om:Property Name="Signal" Value="True" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="fcd09517-4c6d-42b4-875a-f0fb40975d2b" ParentLink="ComplexStatement_Statement" LowerBound="287.1" HigherBound="333.1">
                                    <om:Property Name="Expression" Value="varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;varAPIDate = msgPeppolAPIResp.Timestamp; &#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIRespStatus&quot;,varAPIRespStatus);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIErrorMessage&quot;,varAPIErrorMessage);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIDate&quot;,varAPIDate);&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgPeppolAPIResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}&#xD;&#xA;if(varAPIRespStatus == &quot;false&quot;)&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Failed&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()&quot;);&#xD;&#xA;&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;    //varAPIDate = System.DateTime.Now.ToString(&quot;yyyy-MM-ddTHH:mm:ss&quot;);&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp; &#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Success&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp;    &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;if(varAPIErrorMessage.Length &gt; 555)&#xA;{&#xA;    varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);&#xA;}&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Assign_APIError" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="DecisionBranch" OID="28db6c55-9427-4ca7-9733-8194666a5a4e" ParentLink="ReallyComplexStatement_Branch">
                                <om:Property Name="IsGhostBranch" Value="True" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Else" />
                                <om:Property Name="Signal" Value="False" />
                                <om:Element Type="Construct" OID="c0a9a871-4584-455a-90ff-7ae428a62cf3" ParentLink="ComplexStatement_Statement" LowerBound="336.1" HigherBound="342.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="PeppolXML_CreditNote" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageRef" OID="447ee202-5ccd-409e-84a6-b8bf018f98db" ParentLink="Construct_MessageRef" LowerBound="337.39" HigherBound="337.61">
                                        <om:Property Name="Ref" Value="msgPeppolXMLCreditNote" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="Transform" OID="5a043d21-a009-449c-bfc0-8ef71130911a" ParentLink="ComplexStatement_Statement" LowerBound="339.1" HigherBound="341.1">
                                        <om:Property Name="ClassName" Value="Sp.WanHai.Orchestrations.Map_DBResp_PeppolCNXml" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Name" Value="Transform_3" />
                                        <om:Property Name="Signal" Value="True" />
                                        <om:Element Type="MessagePartRef" OID="5fe139af-5843-4519-882a-d029813243ac" ParentLink="Transform_InputMessagePartRef" LowerBound="340.119" HigherBound="340.135">
                                            <om:Property Name="MessageRef" Value="msguspInvDetResp" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_7" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                        <om:Element Type="MessagePartRef" OID="0740e0e0-a9b8-44c3-be98-02a0eba81af8" ParentLink="Transform_InputMessagePartRef" LowerBound="340.137" HigherBound="340.149">
                                            <om:Property Name="MessageRef" Value="msgSSOValues" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_8" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                        <om:Element Type="MessagePartRef" OID="2cbc3c1b-c833-468d-a5f9-e3872b05854e" ParentLink="Transform_OutputMessagePartRef" LowerBound="340.44" HigherBound="340.66">
                                            <om:Property Name="MessageRef" Value="msgPeppolXMLCreditNote" />
                                            <om:Property Name="ReportToAnalyst" Value="True" />
                                            <om:Property Name="Name" Value="MessagePartReference_9" />
                                            <om:Property Name="Signal" Value="False" />
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="0fe6a5f6-d032-4cb9-8c88-72dbe8bf8106" ParentLink="ComplexStatement_Statement" LowerBound="342.1" HigherBound="348.1">
                                    <om:Property Name="Expression" Value="varCurrDate = System.DateTime.Now.ToString(&quot;yyyyMMdd&quot;);&#xD;&#xA;varSSOFileStorePath=Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;FileStorePath&quot;);&#xD;&#xA;&#xD;&#xA;varFullXMLPath=varSSOFileStorePath+&quot;\\&quot;+varCurrDate+&quot;\\WHL\\Outbound\\CN&quot;;&#xD;&#xA;System.IO.Directory.CreateDirectory(varFullXMLPath);" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="SavePeppolXML" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="Construct" OID="c4d0914d-3a7b-4373-89b6-6cd7e44acab1" ParentLink="ComplexStatement_Statement" LowerBound="348.1" HigherBound="367.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolXML" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageRef" OID="6ccd1e12-27b4-42ed-8291-2e0190ed9369" ParentLink="Construct_MessageRef" LowerBound="349.39" HigherBound="349.65">
                                        <om:Property Name="Ref" Value="msgPeppolXMLCreditNoteCopy" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="MessageAssignment" OID="be540446-66e7-4c35-b9fa-1c41f0325f46" ParentLink="ComplexStatement_Statement" LowerBound="351.1" HigherBound="366.1">
                                        <om:Property Name="Expression" Value="msgPeppolXMLCreditNoteCopy=Sp.WanHai.Common.RemoveEmptyNodes.RemoveEmptyNodesFromXml(msgPeppolXMLCreditNote);&#xD;&#xA;&#xD;&#xA;msgPeppolXMLCreditNoteCopy(FILE.CopyMode) = 2; //overwrite;&#xD;&#xA;&#xD;&#xA;Port_SndDynIALPeppolCNXML(Microsoft.XLANGs.BaseTypes.Address)=@&quot;file://&quot;+varFullXMLPath+&quot;//&quot;+varDocId+&quot;.xml&quot;;&#xD;&#xA;&#xD;&#xA;Port_SndDynIALPeppolCNXML(Microsoft.XLANGs.BaseTypes.TransportType)=&quot;FILE&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                        <om:Property Name="Name" Value="MessageAssignment_3" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="Send" OID="2520072e-a02c-479e-831b-38a5dd04bf5f" ParentLink="ComplexStatement_Statement" LowerBound="367.1" HigherBound="369.1">
                                    <om:Property Name="PortName" Value="Port_SndDynIALPeppolCNXML" />
                                    <om:Property Name="MessageName" Value="msgPeppolXMLCreditNoteCopy" />
                                    <om:Property Name="OperationName" Value="Operation_1" />
                                    <om:Property Name="OperationMessageName" Value="Request" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Send_6" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="39999a3f-f139-4220-97f4-4dcafa620aaa" ParentLink="ComplexStatement_Statement" LowerBound="369.1" HigherBound="394.1">
                                    <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msguspInvDetResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msguspInvDetResp&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgPeppolXMLCreditNoteCopy;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXMLCreditNoteCopy&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolXMLCreditNoteCopy&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="ShowLogs" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="6754b0f4-ff4f-43b1-8cae-39e7787ac94a" ParentLink="ComplexStatement_Statement" LowerBound="394.1" HigherBound="408.1">
                                    <om:Property Name="Expression" Value="varTempXML = msgPeppolXMLCreditNoteCopy;&#xD;&#xA;varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,&quot;IAL&quot;,&quot;Invoice&quot;);&#xD;&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    if(varAPIResp.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;APIResp&quot;,varAPIResp.Substring(0,29500));&#xA;    }&#xA;}" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Call_API_Peppol" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="Construct" OID="7b0b927f-0625-47d8-aee8-3a434621b297" ParentLink="ComplexStatement_Statement" LowerBound="408.1" HigherBound="418.1">
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Const_PeppolAPIResp" />
                                    <om:Property Name="Signal" Value="True" />
                                    <om:Element Type="MessageRef" OID="cc4a0eec-1c54-4ef9-bd35-e5d8293d43b6" ParentLink="Construct_MessageRef" LowerBound="409.39" HigherBound="409.55">
                                        <om:Property Name="Ref" Value="msgPeppolAPIResp" />
                                        <om:Property Name="ReportToAnalyst" Value="True" />
                                        <om:Property Name="Signal" Value="False" />
                                    </om:Element>
                                    <om:Element Type="MessageAssignment" OID="2bea3e39-dd97-433e-8481-e1dc415175bb" ParentLink="ComplexStatement_Statement" LowerBound="411.1" HigherBound="417.1">
                                        <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xA;varTempXML.LoadXml(varAPIResp);&#xA;msgPeppolAPIResp = varTempXML;&#xA;&#xA;varAPIRespStatus = xpath(msgPeppolAPIResp,&quot;string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())&quot;);" />
                                        <om:Property Name="ReportToAnalyst" Value="False" />
                                        <om:Property Name="Name" Value="MessageAssignment_1" />
                                        <om:Property Name="Signal" Value="True" />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type="VariableAssignment" OID="a91f6790-cda5-4a2a-b575-b8c3bb40892d" ParentLink="ComplexStatement_Statement" LowerBound="418.1" HigherBound="464.1">
                                    <om:Property Name="Expression" Value="varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;varAPIDate = msgPeppolAPIResp.Timestamp; &#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.Wanhai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIRespStatus&quot;,varAPIRespStatus);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIErrorMessage&quot;,varAPIErrorMessage);&#xA;    System.Diagnostics.EventLog.WriteEntry(&quot;varAPIDate&quot;,varAPIDate);&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgPeppolAPIResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgPeppolAPIResp&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}&#xD;&#xA;if(varAPIRespStatus == &quot;false&quot;)&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Failed&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()&quot;);&#xD;&#xA;&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;&#xD;&#xA;    //varAPIDate = System.DateTime.Now.ToString(&quot;yyyy-MM-ddTHH:mm:ss&quot;);&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp; &#xD;&#xA;}&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;    varAPIStatus = &quot;Success&quot;;&#xD;&#xA;    //varAPIErrorMessage = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    //varAPIDate = xpath(msgPeppolAPIResp,&quot;/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()&quot;);&#xD;&#xA;    varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;&#xD;&#xA;    varAPIDate = msgPeppolAPIResp.Timestamp;    &#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;if(varAPIErrorMessage.Length &gt; 555)&#xA;{&#xA;    varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);&#xA;}&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Name" Value="Assign_APIError" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="bc21cd77-8769-4673-9557-b66fd809cb7d" ParentLink="ComplexStatement_Statement" LowerBound="465.1" HigherBound="474.1">
                            <om:Property Name="Expression" Value="varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varAPIErrorMessage = varAPIErrorMessage.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;if(varAPIErrorMessage.Length &gt; 1000)&#xD;&#xA;{&#xD;&#xA;    varAPIErrorMessage = varAPIErrorMessage.Substring(0,999);&#xD;&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="StatusMsg" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Construct" OID="3f865443-5426-448d-835d-c864bece0de4" ParentLink="ComplexStatement_Statement" LowerBound="474.1" HigherBound="482.1">
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Const_uspPOStatusUpdReq" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="MessageRef" OID="6eb1c924-3188-4ba9-acf6-b57777847a04" ParentLink="Construct_MessageRef" LowerBound="475.35" HigherBound="475.56">
                                <om:Property Name="Ref" Value="msgInvAPIStatusUpdReq" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="MessageAssignment" OID="412f905b-4d2d-4cd4-8fe6-ab0a14b638c7" ParentLink="ComplexStatement_Statement" LowerBound="477.1" HigherBound="481.1">
                                <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfaceWHLInvoiceStatusUpd xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:DocumentID&gt;&quot; + varDocId + &quot;&lt;/ns0:DocumentID&gt;&lt;ns0:StatusType&gt;API&lt;/ns0:StatusType&gt;&lt;ns0:Status&gt;&quot; + varAPIStatus + &quot;&lt;/ns0:Status&gt;&lt;ns0:StatusMessage&gt;&quot; + varAPIErrorMessage + &quot;&lt;/ns0:StatusMessage&gt;&lt;ns0:StatusDateTime&gt;&quot; + varAPIDate + &quot;&lt;/ns0:StatusDateTime&gt;&lt;ns0:PeppolInvoiceXMLPath&gt;&quot; + varFullXMLPath+&quot;\\&quot;+varDocId+&quot;.xml&quot; + &quot;&lt;/ns0:PeppolInvoiceXMLPath&gt;&lt;ns0:LHDNUUID&gt;-&lt;/ns0:LHDNUUID&gt;&lt;ns0:LHDNLongID&gt;-&lt;/ns0:LHDNLongID&gt;&lt;/ns0:InterfaceWHLInvoiceStatusUpd&gt;&quot;);&#xD;&#xA;msgInvAPIStatusUpdReq = varTempXML;&#xD;&#xA;" />
                                <om:Property Name="ReportToAnalyst" Value="False" />
                                <om:Property Name="Name" Value="MessageAssignment_4" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="ae59ac49-786c-4635-b3a4-df0a3294c586" ParentLink="ComplexStatement_Statement" LowerBound="482.1" HigherBound="497.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgInvAPIStatusUpdReq;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdReq&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdReq&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ShowLogs" />
                            <om:Property Name="Signal" Value="False" />
                        </om:Element>
                        <om:Element Type="Send" OID="08dd6782-e567-4370-8151-698a57b9607b" ParentLink="ComplexStatement_Statement" LowerBound="497.1" HigherBound="499.1">
                            <om:Property Name="PortName" Value="Port_SndRcvIALInvAPIStatusUpd" />
                            <om:Property Name="MessageName" Value="msgInvAPIStatusUpdReq" />
                            <om:Property Name="OperationName" Value="Operation_1" />
                            <om:Property Name="OperationMessageName" Value="Request" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Send_1" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Receive" OID="a1e4fa2c-2416-47ee-bc3f-8cef278f7f86" ParentLink="ComplexStatement_Statement" LowerBound="499.1" HigherBound="501.1">
                            <om:Property Name="Activate" Value="False" />
                            <om:Property Name="PortName" Value="Port_SndRcvIALInvAPIStatusUpd" />
                            <om:Property Name="MessageName" Value="msgInvAPIStatusUpdResp" />
                            <om:Property Name="OperationName" Value="Operation_1" />
                            <om:Property Name="OperationMessageName" Value="Response" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="Receive_3" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="VariableAssignment" OID="fa478dba-3348-4c22-87d1-a25e1b73fb7e" ParentLink="ComplexStatement_Statement" LowerBound="501.1" HigherBound="516.1">
                            <om:Property Name="Expression" Value="&#xA;if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;ShowWHLAdminLogs&quot;)) == &quot;Yes&quot;)&#xA;{&#xA;    varTempXML = new System.Xml.XmlDocument();&#xA;    varTempXML = msgInvAPIStatusUpdResp;&#xA;    if(varTempXML.OuterXml.Length &lt; 30000)&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdResp&quot;,varTempXML.OuterXml);&#xA;    }&#xA;    else&#xA;    {&#xA;        System.Diagnostics.EventLog.WriteEntry(&quot;msgInvAPIStatusUpdResp&quot;,varTempXML.OuterXml.Substring(0,29500));&#xA;    }&#xA;}" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="ShowLogs" />
                            <om:Property Name="Signal" Value="True" />
                        </om:Element>
                        <om:Element Type="Catch" OID="3df3d474-416c-4e9e-ab5c-d74e7bb3da40" ParentLink="Scope_Catch" LowerBound="519.1" HigherBound="576.1">
                            <om:Property Name="ExceptionName" Value="ex" />
                            <om:Property Name="ExceptionType" Value="System.Exception" />
                            <om:Property Name="IsFaultMessage" Value="False" />
                            <om:Property Name="ReportToAnalyst" Value="True" />
                            <om:Property Name="Name" Value="System Exception" />
                            <om:Property Name="Signal" Value="True" />
                            <om:Element Type="VariableAssignment" OID="e44e0985-3e99-4835-8d84-f7350a710e4c" ParentLink="Catch_Statement" LowerBound="522.1" HigherBound="533.1">
                                <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;WHLAPIUpdateException&quot;,ex.Message);&#xD;&#xA;varExceptionmsg = ex.Message;&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&amp;&quot;,&quot;&amp;amp;&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;'&quot;,&quot;''&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&lt;&quot;,&quot;&amp;lt;&quot;);&#xD;&#xA;varExceptionmsg = varExceptionmsg.Replace(&quot;&gt;&quot;,&quot;&amp;gt;&quot;);&#xD;&#xA;if(varExceptionmsg.Length &gt; 1000)&#xD;&#xA;{&#xD;&#xA;    varExceptionmsg = varExceptionmsg.Substring(0,999);&#xD;&#xA;}" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="ExceptionMsg" />
                                <om:Property Name="Signal" Value="False" />
                            </om:Element>
                            <om:Element Type="Construct" OID="8aff2686-50bd-401c-aa99-36a18800faf9" ParentLink="Catch_Statement" LowerBound="533.1" HigherBound="543.1">
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="const_ErrorLogsTable" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="MessageRef" OID="a3a0df1e-a1bc-41b2-9ecd-c4a7fb8fcea9" ParentLink="Construct_MessageRef" LowerBound="534.39" HigherBound="534.51">
                                    <om:Property Name="Ref" Value="msgErrorLogs" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                                <om:Element Type="MessageAssignment" OID="f11c2f85-39c0-4954-bde7-8ea1da3893e1" ParentLink="ComplexStatement_Statement" LowerBound="536.1" HigherBound="542.1">
                                    <om:Property Name="Expression" Value="varTempXML = new System.Xml.XmlDocument();&#xD;&#xA;varTempXML.LoadXml(&quot;&lt;ns0:InterfaceWHLErrorLogs xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'&gt;&lt;ns0:HubID&gt;MOFGeBiz&lt;/ns0:HubID&gt;&lt;ns0:DocumentID&gt;&quot; + varDocId + &quot;&lt;/ns0:DocumentID&gt;&lt;ns0:DocumentType&gt;GeBizPOXML&lt;/ns0:DocumentType&gt;&lt;ns0:DocumentNumber&gt;&quot; + varDocId + &quot;&lt;/ns0:DocumentNumber&gt;&lt;ns0:ModuleName&gt;Process_GeBizPO_DB_Peppol&lt;/ns0:ModuleName&gt;&lt;ns0:ExceptionType&gt;&quot; + ex.Source + &quot;&lt;/ns0:ExceptionType&gt;&lt;ns0:ErrorMessage&gt;&quot; + varExceptionmsg + &quot;&lt;/ns0:ErrorMessage&gt;&lt;ns0:VendorCode&gt;-&lt;/ns0:VendorCode&gt;&lt;ns0:DocumentPath&gt;-&lt;/ns0:DocumentPath&gt;&lt;/ns0:InterfaceWHLErrorLogs&gt;&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorLogs.Body = varTempXML;&#xD;&#xA;&#xD;&#xA;" />
                                    <om:Property Name="ReportToAnalyst" Value="False" />
                                    <om:Property Name="Name" Value="MessageAssignment_3" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="Send" OID="b258b656-6b4e-4d31-8b8f-dc61f9749f69" ParentLink="Catch_Statement" LowerBound="543.1" HigherBound="545.1">
                                <om:Property Name="PortName" Value="Port_SndWHLErrorLogs" />
                                <om:Property Name="MessageName" Value="msgErrorLogs" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Request" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Send_4" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                            <om:Element Type="Construct" OID="fcfe0a14-a794-4286-9ed7-49301795bd11" ParentLink="Catch_Statement" LowerBound="545.1" HigherBound="573.1">
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Const_ErrorEmail" />
                                <om:Property Name="Signal" Value="True" />
                                <om:Element Type="MessageAssignment" OID="da989505-88bb-4cd9-ae98-c984cb6b97bc" ParentLink="ComplexStatement_Statement" LowerBound="548.1" HigherBound="572.1">
                                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;WHLIALAPIUpdException&quot;,ex.Message);&#xD;&#xA;&#xD;&#xA;varEmailBody = new System.Text.StringBuilder();&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;html&gt;&lt;body&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;p&gt;WHL IAL Invoice API update failed while Updating in SESAMi.&lt;/p&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;p&gt;&lt;b&gt;&lt;u&gt;Error details:&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Application Name&lt;/b&gt; : &lt;i&gt;Sp.Wanhai&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Process Name&lt;/b&gt; : &lt;i&gt;Process_IALInvoice_PeppolAPI&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;DocId&lt;/b&gt; : &lt;i&gt;&quot; + varDocId  + &quot;&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Failure Code&lt;/b&gt; : &quot; + ex.Source + &quot;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;b&gt;Error Description&lt;/b&gt; : &lt;i&gt;&quot; + ex.Message + &quot;&lt;/i&gt;&lt;br/&gt;&quot;);&#xD;&#xA;varEmailBody.AppendLine(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);&#xD;&#xA;msgErrorEmail.Body = new Sp.WanHai.Common.RawString(varEmailBody.ToString());&#xD;&#xA;Sp.WanHai.Common.SMTPUtils.SetContentType(msgErrorEmail.Body,&quot;text/html&quot;);&#xD;&#xA;Port_SndIALErrorEmail(Microsoft.XLANGs.BaseTypes.Address) = Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;SMTPTo&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.From) = Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;SMTPFrom&quot;);&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.Subject) = &quot;Wanhai IAL Invoice API status failed while updating status for DocId: &quot; + varDocId;&#xD;&#xA;&#xD;&#xA;msgErrorEmail(SMTP.EmailBodyFileCharset) = &quot;UTF-8&quot;;&#xD;&#xA;msgErrorEmail(SMTP.CC) = Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;SMTPCCopy&quot;);&#xD;&#xA;msgErrorEmail(SMTP.SMTPHost)= Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;SMTPHost&quot;);" />
                                    <om:Property Name="ReportToAnalyst" Value="False" />
                                    <om:Property Name="Name" Value="MessageAssignment_1" />
                                    <om:Property Name="Signal" Value="True" />
                                </om:Element>
                                <om:Element Type="MessageRef" OID="0fde24cc-7fa4-48fe-a33a-5bb94de4f59f" ParentLink="Construct_MessageRef" LowerBound="546.39" HigherBound="546.52">
                                    <om:Property Name="Ref" Value="msgErrorEmail" />
                                    <om:Property Name="ReportToAnalyst" Value="True" />
                                    <om:Property Name="Signal" Value="False" />
                                </om:Element>
                            </om:Element>
                            <om:Element Type="Send" OID="558bc201-2400-468f-8b17-470b09a9566e" ParentLink="Catch_Statement" LowerBound="573.1" HigherBound="575.1">
                                <om:Property Name="PortName" Value="Port_SndIALErrorEmail" />
                                <om:Property Name="MessageName" Value="msgErrorEmail" />
                                <om:Property Name="OperationName" Value="Operation_1" />
                                <om:Property Name="OperationMessageName" Value="Request" />
                                <om:Property Name="ReportToAnalyst" Value="True" />
                                <om:Property Name="Name" Value="Send_3" />
                                <om:Property Name="Signal" Value="True" />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type="Delay" OID="b0d45673-cbd8-4436-84a1-acaa716d5770" ParentLink="ComplexStatement_Statement" LowerBound="578.1" HigherBound="580.1">
                        <om:Property Name="Timeout" Value="new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.WanHai.Common.SSOClientHelper.Read(&quot;Sp.WanHai&quot;, &quot;WHLAPIDelayinMS&quot;)));" />
                        <om:Property Name="ReportToAnalyst" Value="True" />
                        <om:Property Name="Name" Value="Delay_SSO" />
                        <om:Property Name="Signal" Value="True" />
                    </om:Element>
                </om:Element>
                <om:Element Type="VariableAssignment" OID="253982d4-05b7-455d-96cd-c02d0925c052" ParentLink="ServiceBody_Statement" LowerBound="581.1" HigherBound="583.1">
                    <om:Property Name="Expression" Value="System.Diagnostics.EventLog.WriteEntry(&quot;WHL_IAL SESAMi API Process End&quot;,&quot;WHL_IAL SESAMi API Process Completed&quot;);" />
                    <om:Property Name="ReportToAnalyst" Value="True" />
                    <om:Property Name="Name" Value="Process_End" />
                    <om:Property Name="Signal" Value="True" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="6cebdc25-0658-4b7d-9817-febb293045aa" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="49.1" HigherBound="51.1">
                <om:Property Name="PortModifier" Value="Implements" />
                <om:Property Name="Orientation" Value="Left" />
                <om:Property Name="PortIndex" Value="-1" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_RcvIALInvoicesPoll" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_RcvIALInvoicesPoll" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="377bdef8-2f5a-44f5-9410-151e582ee770" ParentLink="PortDeclaration_CLRAttribute" LowerBound="49.1" HigherBound="50.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="9e05cde9-2d58-4472-bbed-a3392a0410b3" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="51.1" HigherBound="53.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="46" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndRcvIALInvoiceDetails" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvIALInvoiceDetails" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="5287b74a-b53d-4520-884e-f0382123c284" ParentLink="PortDeclaration_CLRAttribute" LowerBound="51.1" HigherBound="52.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="1c284617-1911-42ac-aead-9f1841085475" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="53.1" HigherBound="55.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="128" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndRcvIALInvAPIStatusUpd" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndRcvIALInvAPIStatusUpd" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="f7c7d350-8973-4e35-815f-a00be28e0e8f" ParentLink="PortDeclaration_CLRAttribute" LowerBound="53.1" HigherBound="54.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="6225c564-b5e4-4a1e-bd00-eb85321d4bfd" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="55.1" HigherBound="57.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="161" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndWHLErrorLogs" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndWHLErrorLogs" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="LogicalBindingAttribute" OID="a032c7c1-e5e2-488f-b860-e74738f965bf" ParentLink="PortDeclaration_CLRAttribute" LowerBound="55.1" HigherBound="56.1">
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="ab2055d3-c531-418d-8486-57282041c8da" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="57.1" HigherBound="59.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="-1" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndIALErrorEmail" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndIALErrorEmail" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="PhysicalBindingAttribute" OID="94ff0cc9-1c40-4c8a-93bf-14a1d1f0fdfb" ParentLink="PortDeclaration_CLRAttribute" LowerBound="57.1" HigherBound="58.1">
                    <om:Property Name="InPipeline" Value="Microsoft.BizTalk.DefaultPipelines.XMLReceive" />
                    <om:Property Name="OutPipeline" Value="Microsoft.BizTalk.DefaultPipelines.PassThruTransmit" />
                    <om:Property Name="TransportType" Value="HTTP" />
                    <om:Property Name="URI" Value="http://tempURI" />
                    <om:Property Name="IsDynamic" Value="True" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="bcdf7fcb-8e32-4ec9-84f8-0a391b6b5120" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="59.1" HigherBound="61.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Left" />
                <om:Property Name="PortIndex" Value="110" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndDynIALPeppolInvoiceXML" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndDynIALPeppolInvoiceXML" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="PhysicalBindingAttribute" OID="5f45b448-b42d-4846-b0fc-cfc2dca54e00" ParentLink="PortDeclaration_CLRAttribute" LowerBound="59.1" HigherBound="60.1">
                    <om:Property Name="InPipeline" Value="Microsoft.BizTalk.DefaultPipelines.XMLReceive" />
                    <om:Property Name="OutPipeline" Value="Microsoft.BizTalk.DefaultPipelines.PassThruTransmit" />
                    <om:Property Name="TransportType" Value="HTTP" />
                    <om:Property Name="URI" Value="http://tempURI" />
                    <om:Property Name="IsDynamic" Value="True" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
            <om:Element Type="PortDeclaration" OID="fcb88c79-18ba-49ba-84bf-74fbc013f2ac" ParentLink="ServiceDeclaration_PortDeclaration" LowerBound="61.1" HigherBound="63.1">
                <om:Property Name="PortModifier" Value="Uses" />
                <om:Property Name="Orientation" Value="Right" />
                <om:Property Name="PortIndex" Value="100" />
                <om:Property Name="IsWebPort" Value="False" />
                <om:Property Name="OrderedDelivery" Value="False" />
                <om:Property Name="DeliveryNotification" Value="None" />
                <om:Property Name="Type" Value="Sp.WanHai.Orchestrations.PortType_SndDynIALPeppolCNXML" />
                <om:Property Name="ParamDirection" Value="In" />
                <om:Property Name="ReportToAnalyst" Value="True" />
                <om:Property Name="Name" Value="Port_SndDynIALPeppolCNXML" />
                <om:Property Name="Signal" Value="False" />
                <om:Element Type="PhysicalBindingAttribute" OID="14f46555-6d81-426f-834c-6ea970938996" ParentLink="PortDeclaration_CLRAttribute" LowerBound="61.1" HigherBound="62.1">
                    <om:Property Name="InPipeline" Value="Microsoft.BizTalk.DefaultPipelines.XMLReceive" />
                    <om:Property Name="OutPipeline" Value="Microsoft.BizTalk.DefaultPipelines.PassThruTransmit" />
                    <om:Property Name="TransportType" Value="HTTP" />
                    <om:Property Name="URI" Value="http://tempURI" />
                    <om:Property Name="IsDynamic" Value="True" />
                    <om:Property Name="Signal" Value="False" />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
#endif // __DESIGNER_DATA
[Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
module Sp.WanHai.Orchestrations
{
    internal porttype PortType_RcvIALInvoicesPoll
    {
        oneway Operation_1
        {
            Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPolling
        };
    };
    internal porttype PortType_SndRcvIALInvoiceDetails
    {
        requestresponse Operation_1
        {
            Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetails, Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetailsResponse
        };
    };
    internal porttype PortType_SndDynIALPeppolInvoiceXML
    {
        oneway Operation_1
        {
            Sp.WanHai.Schemas.PeppolInvoice
        };
    };
    internal porttype PortType_SndRcvIALInvAPIStatusUpd
    {
        requestresponse Operation_1
        {
            Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpd, Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpdResponse
        };
    };
    internal porttype PortType_SndIALErrorEmail
    {
        oneway Operation_1
        {
            msgMultiErrorEmails
        };
    };
    internal porttype PortType_SndDynIALPeppolCNXML
    {
        oneway Operation_1
        {
            Sp.WanHai.Schemas.PeppolCreditNote
        };
    };
    [Microsoft.XLANGs.BaseTypes.BPELExportable(false)]
    internal service Process_IALInvoiceSESAMiAPI
    {
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port implements PortType_RcvIALInvoicesPoll Port_RcvIALInvoicesPoll;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndRcvIALInvoiceDetails Port_SndRcvIALInvoiceDetails;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndRcvIALInvAPIStatusUpd Port_SndRcvIALInvAPIStatusUpd;
        [Microsoft.XLANGs.BaseTypes.LogicalBinding()]
        port uses PortType_SndWHLErrorLogs Port_SndWHLErrorLogs;
        [Microsoft.XLANGs.BaseTypes.PhysicalBinding(typeof(Microsoft.BizTalk.DefaultPipelines.PassThruTransmit))]
        port uses dynamic PortType_SndIALErrorEmail Port_SndIALErrorEmail;
        [Microsoft.XLANGs.BaseTypes.PhysicalBinding(typeof(Microsoft.BizTalk.DefaultPipelines.PassThruTransmit))]
        port uses dynamic PortType_SndDynIALPeppolInvoiceXML Port_SndDynIALPeppolInvoiceXML;
        [Microsoft.XLANGs.BaseTypes.PhysicalBinding(typeof(Microsoft.BizTalk.DefaultPipelines.PassThruTransmit))]
        port uses dynamic PortType_SndDynIALPeppolCNXML Port_SndDynIALPeppolCNXML;
        message Sp.WanHai.Schemas.PeppolCreditNote msgPeppolXMLCreditNoteCopy;
        message Sp.WanHai.Schemas.PeppolCreditNote msgPeppolXMLCreditNote;
        message Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetailsResponse msguspInvDetResp;
        message Sp.WanHai.Schemas.uspInvDetails_TypedProcedure_dbo.InterfaceWHLInvoiceDetails msguspInvDetailsReq;
        message Sp.WanHai.Schemas.SSOValues msgSSOValues;
        message Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPollingResultSet0 msgSingleDocId;
        message Sp.WanHai.Schemas.uspPollInvSESAMiApiIAL_TypedPolling_InterfaceWHLInvoiceSESAMiAPIIAL.TypedPolling msgPollInvoices;
        message Sp.WanHai.Schemas.PeppolInvoice msgPeppolXMLCopy;
        message Sp.WanHai.Schemas.PeppolInvoice msgPeppolXML;
        message Sp.WanHai.Schemas.PeppolAPIResponse msgPeppolAPIResp;
        message Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpdResponse msgInvAPIStatusUpdResp;
        message Sp.WanHai.Schemas.uspInvStatusUpd_TypedProcedure_dbo.InterfaceWHLInvoiceStatusUpd msgInvAPIStatusUpdReq;
        message msgMultiErrorLogs msgErrorLogs;
        message msgMultiErrorEmails msgErrorEmail;
        System.Xml.XmlDocument varTempXML;
        System.String varSSOPeppolIdType;
        System.String varSSOFileStorePath;
        Sp.WanHai.CallAPI.PostPeppolXMLData varobjPeppolAPI;
        System.String varLoopItem;
        System.Int32 varLoopCounter;
        System.String varFullXMLPath;
        System.String varExceptionmsg;
        System.Text.StringBuilder varEmailBody;
        System.String varDocId;
        System.Int32 varDocCount;
        System.String varCurrDate;
        System.String varAPIStatus;
        System.String varAPIRespStatus;
        System.String varAPIResp;
        System.String varAPIErrorMessage;
        System.String varAPIDate;
        System.String varInvoiceNo;
        System.String varInvoiceTypeCode;
        System.String varSupplierTIN;
        body ()
        {
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("c3b2cd62-2cb2-4978-b512-f8f9ad4bf525")]
            activate receive (Port_RcvIALInvoicesPoll.Operation_1, msgPollInvoices);
            varTempXML = new System.Xml.XmlDocument();
            varSSOPeppolIdType = "";
            varSSOFileStorePath = "";
            varobjPeppolAPI = new Sp.WanHai.CallAPI.PostPeppolXMLData();
            varLoopItem = "";
            varLoopCounter = 0;
            varFullXMLPath = "";
            varExceptionmsg = "";
            varEmailBody = new System.Text.StringBuilder();
            varDocId = "";
            varDocCount = 0;
            varCurrDate = "";
            varAPIStatus = "";
            varAPIRespStatus = "";
            varAPIResp = "";
            varAPIErrorMessage = "";
            varAPIDate = "";
            varInvoiceNo = "";
            varInvoiceTypeCode = "";
            varSupplierTIN = "";
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("5c09e6a0-f199-472f-a01c-a6fb42a12f1b")]
            System.Diagnostics.EventLog.WriteEntry("WHL_IAL SESAMi API Process Start","WHL_IAL SESAMi API Process Started");
            varDocCount = xpath(msgPollInvoices,"count(/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='DocumentID' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL'])");
            System.Diagnostics.EventLog.WriteEntry("WHL_IAL SESAMi API Doc Count",varDocCount.ToString());
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("5b776b7b-89d2-48ae-a1ac-0033bb2cf3f0")]
            while (varLoopCounter < varDocCount)
            {
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("7b88fc1b-f681-4434-8fab-d2ad498d59ac")]
                scope
                {
                    body
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("56936fe4-5fbd-42c4-a273-3a9677b0a479")]
                        varLoopCounter = varLoopCounter + 1;
                        varLoopItem = varLoopCounter.ToString();
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("266358a8-ad3d-4678-b1ee-b32599c27c53")]
                        construct msgSingleDocId
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("f92ddd79-ab1f-416a-9ebf-5d3fe6dbbe47")]
                            msgSingleDocId = xpath(msgPollInvoices, "/*[local-name()='TypedPolling' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']/*[local-name()='TypedPollingResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedPolling/InterfaceWHLInvoiceSESAMiAPIIAL']["+ varLoopItem +"]" );
                            varDocId = msgSingleDocId.DocumentID;
                            
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("8b5cffc6-885e-4f79-8780-c7fe39ae6c98")]
                        construct msguspInvDetailsReq
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("28431376-b699-4616-a564-596bf2f65462")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.LoadXml("<ns0:InterfaceWHLInvoiceDetails xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:DocumentID>" + varDocId + "</ns0:DocumentID></ns0:InterfaceWHLInvoiceDetails>");
                            msguspInvDetailsReq = varTempXML;
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("b451ea1d-70ac-4665-99ba-961f15fdc4d6")]
                        
                        if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                        {
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msguspInvDetailsReq;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msguspInvDetailsReq",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msguspInvDetailsReq",varTempXML.OuterXml.Substring(1,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("4f249020-d40b-4c95-8bb9-f2373a4a4567")]
                        send (Port_SndRcvIALInvoiceDetails.Operation_1, msguspInvDetailsReq);
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("b436e91b-623f-4a3e-b692-127cdb845aa8")]
                        receive (Port_SndRcvIALInvoiceDetails.Operation_1, msguspInvDetResp);
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("ed259400-4bb5-44ad-a82c-12dd3564a343")]
                        varInvoiceNo = xpath(msguspInvDetResp,"string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='InvoiceNumber' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())");
                        varSSOPeppolIdType = Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "PeppolId_Type");
                        varInvoiceTypeCode = xpath(msguspInvDetResp,"string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='InvoiceTypeCode' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())");
                        varSupplierTIN = xpath(msguspInvDetResp,"string(/*[local-name()='InterfaceWHLInvoiceDetailsResponse' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo']/*[local-name()='StoredProcedureResultSet0' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/*[local-name()='SellerTIN' and namespace-uri()='http://schemas.microsoft.com/Sql/2008/05/ProceduresResultSets/dbo/InterfaceWHLInvoiceDetails']/text())");
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("a0497ae7-1445-48f1-aa56-66a6273ae208")]
                        construct msgSSOValues
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("3de8e608-9cbd-4a93-8c8b-e9b9a30d2c1c")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.LoadXml("<Root><PeppolIdType>" + varSSOPeppolIdType + "</PeppolIdType><HubID>IAL</HubID></Root>");
                            msgSSOValues = varTempXML;
                            
                            
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("0eeec38a-4416-4ddc-bebc-e52388785d3a")]
                        
                        if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                        {
                            System.Diagnostics.EventLog.WriteEntry("SSOPeppolId",varSSOPeppolIdType);
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgSSOValues;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSSOValues",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgSSOValues",varTempXML.OuterXml.Substring(0,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("b118e3bb-55c4-4496-a266-7b1c3a88f4b5")]
                        if (varInvoiceTypeCode == "380")
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("5d54aaf8-c7ce-4524-8a96-6d3ba1269148")]
                            construct msgPeppolXML
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("2154211d-4aac-47fa-8ba0-81ae4713ee7f")]
                                transform (msgPeppolXML) = Sp.WanHai.Orchestrations.Map_DBResp_PeppolInvXML (msguspInvDetResp, msgSSOValues);
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("f5978721-6e60-4b6b-905a-c3d8e5eccfcd")]
                            varCurrDate = System.DateTime.Now.ToString("yyyyMMdd");
                            varSSOFileStorePath=Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "FileStorePath");
                            
                            varFullXMLPath=varSSOFileStorePath+"\\"+varCurrDate+"\\WHL\\Outbound\\Invoice";
                            System.IO.Directory.CreateDirectory(varFullXMLPath);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("8e91ac92-7016-4ea9-a855-2d887a3d13ff")]
                            construct msgPeppolXMLCopy
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("1b3f092e-840f-4b88-a122-c630878269a1")]
                                msgPeppolXMLCopy=Sp.WanHai.Common.RemoveEmptyNodes.RemoveEmptyNodesFromXml(msgPeppolXML);
                                
                                msgPeppolXMLCopy(FILE.CopyMode) = 2; //overwrite;
                                
                                Port_SndDynIALPeppolInvoiceXML(Microsoft.XLANGs.BaseTypes.Address)=@"file://"+varFullXMLPath+"//"+varDocId+".xml";
                                
                                Port_SndDynIALPeppolInvoiceXML(Microsoft.XLANGs.BaseTypes.TransportType)="FILE";
                                
                                
                                
                                
                                
                                
                                
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("95d6441c-bb48-487f-9ae5-7a91e4d12688")]
                            send (Port_SndDynIALPeppolInvoiceXML.Operation_1, msgPeppolXMLCopy);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("472fbc9b-391c-426f-96b4-7ba3cbb00fa6")]
                            
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msguspInvDetResp;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msguspInvDetResp",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msguspInvDetResp",varTempXML.OuterXml.Substring(0,29500));
                                }
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgPeppolXMLCopy;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXMLCopy",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXMLCopy",varTempXML.OuterXml.Substring(0,29500));
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("9ee62496-3fb0-4d90-9de1-d52d5efec2e3")]
                            varTempXML = msgPeppolXMLCopy;
                            varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,"IAL","Invoice");
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                if(varAPIResp.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp.Substring(0,29500));
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("e75509f8-78d4-401e-b64a-9c6abfa2c5c4")]
                            construct msgPeppolAPIResp
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("f362dad4-3fb7-4b48-9882-69196e570682")]
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML.LoadXml(varAPIResp);
                                msgPeppolAPIResp = varTempXML;
                                
                                varAPIRespStatus = xpath(msgPeppolAPIResp,"string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())");
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("fcd09517-4c6d-42b4-875a-f0fb40975d2b")]
                            varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                            varAPIDate = msgPeppolAPIResp.Timestamp; 
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                System.Diagnostics.EventLog.WriteEntry("varAPIRespStatus",varAPIRespStatus);
                                System.Diagnostics.EventLog.WriteEntry("varAPIErrorMessage",varAPIErrorMessage);
                                System.Diagnostics.EventLog.WriteEntry("varAPIDate",varAPIDate);
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgPeppolAPIResp;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml.Substring(0,29500));
                                }
                            }
                            if(varAPIRespStatus == "false")
                            {
                                varAPIStatus = "Failed";
                                //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()");
                                //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()");
                            
                                varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                                //varAPIDate = System.DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
                                varAPIDate = msgPeppolAPIResp.Timestamp; 
                            }
                            else
                            {
                                varAPIStatus = "Success";
                                //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()");
                                //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()");
                                varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;
                                varAPIDate = msgPeppolAPIResp.Timestamp;    
                            }
                            
                            varAPIErrorMessage = varAPIErrorMessage.Replace("&","&amp;");
                            varAPIErrorMessage = varAPIErrorMessage.Replace("'","''");
                            varAPIErrorMessage = varAPIErrorMessage.Replace("<","&lt;");
                            varAPIErrorMessage = varAPIErrorMessage.Replace(">","&gt;");
                            if(varAPIErrorMessage.Length > 555)
                            {
                                varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);
                            }
                        }
                        else 
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("c0a9a871-4584-455a-90ff-7ae428a62cf3")]
                            construct msgPeppolXMLCreditNote
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("5a043d21-a009-449c-bfc0-8ef71130911a")]
                                transform (msgPeppolXMLCreditNote) = Sp.WanHai.Orchestrations.Map_DBResp_PeppolCNXml (msguspInvDetResp, msgSSOValues);
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("0fe6a5f6-d032-4cb9-8c88-72dbe8bf8106")]
                            varCurrDate = System.DateTime.Now.ToString("yyyyMMdd");
                            varSSOFileStorePath=Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "FileStorePath");
                            
                            varFullXMLPath=varSSOFileStorePath+"\\"+varCurrDate+"\\WHL\\Outbound\\CN";
                            System.IO.Directory.CreateDirectory(varFullXMLPath);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("c4d0914d-3a7b-4373-89b6-6cd7e44acab1")]
                            construct msgPeppolXMLCreditNoteCopy
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("be540446-66e7-4c35-b9fa-1c41f0325f46")]
                                msgPeppolXMLCreditNoteCopy=Sp.WanHai.Common.RemoveEmptyNodes.RemoveEmptyNodesFromXml(msgPeppolXMLCreditNote);
                                
                                msgPeppolXMLCreditNoteCopy(FILE.CopyMode) = 2; //overwrite;
                                
                                Port_SndDynIALPeppolCNXML(Microsoft.XLANGs.BaseTypes.Address)=@"file://"+varFullXMLPath+"//"+varDocId+".xml";
                                
                                Port_SndDynIALPeppolCNXML(Microsoft.XLANGs.BaseTypes.TransportType)="FILE";
                                
                                
                                
                                
                                
                                
                                
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("2520072e-a02c-479e-831b-38a5dd04bf5f")]
                            send (Port_SndDynIALPeppolCNXML.Operation_1, msgPeppolXMLCreditNoteCopy);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("39999a3f-f139-4220-97f4-4dcafa620aaa")]
                            
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msguspInvDetResp;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msguspInvDetResp",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msguspInvDetResp",varTempXML.OuterXml.Substring(0,29500));
                                }
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgPeppolXMLCreditNoteCopy;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXMLCreditNoteCopy",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolXMLCreditNoteCopy",varTempXML.OuterXml.Substring(0,29500));
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("6754b0f4-ff4f-43b1-8cae-39e7787ac94a")]
                            varTempXML = msgPeppolXMLCreditNoteCopy;
                            varAPIResp = varobjPeppolAPI.PostResponseData(varTempXML.OuterXml,"IAL","Invoice");
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                if(varAPIResp.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("APIResp",varAPIResp.Substring(0,29500));
                                }
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("7b0b927f-0625-47d8-aee8-3a434621b297")]
                            construct msgPeppolAPIResp
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("2bea3e39-dd97-433e-8481-e1dc415175bb")]
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML.LoadXml(varAPIResp);
                                msgPeppolAPIResp = varTempXML;
                                
                                varAPIRespStatus = xpath(msgPeppolAPIResp,"string(/*[local-name()='PeppolAPIResponse']/*[local-name()='Succeed']/text())");
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("a91f6790-cda5-4a2a-b575-b8c3bb40892d")]
                            varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                            varAPIDate = msgPeppolAPIResp.Timestamp; 
                            if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.Wanhai", "ShowWHLAdminLogs")) == "Yes")
                            {
                                System.Diagnostics.EventLog.WriteEntry("varAPIRespStatus",varAPIRespStatus);
                                System.Diagnostics.EventLog.WriteEntry("varAPIErrorMessage",varAPIErrorMessage);
                                System.Diagnostics.EventLog.WriteEntry("varAPIDate",varAPIDate);
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML = msgPeppolAPIResp;
                                if(varTempXML.OuterXml.Length < 30000)
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml);
                                }
                                else
                                {
                                    System.Diagnostics.EventLog.WriteEntry("msgPeppolAPIResp",varTempXML.OuterXml.Substring(0,29500));
                                }
                            }
                            if(varAPIRespStatus == "false")
                            {
                                varAPIStatus = "Failed";
                                //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='ErrorDescription']/text()");
                                //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse']/*[local-name()='Timestamp'']/text()");
                            
                                varAPIErrorMessage = msgPeppolAPIResp.ErrorDescription;
                                //varAPIDate = System.DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss");
                                varAPIDate = msgPeppolAPIResp.Timestamp; 
                            }
                            else
                            {
                                varAPIStatus = "Success";
                                //varAPIErrorMessage = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='InvoiceSubmissionID' and namespace-uri()='']/text()");
                                //varAPIDate = xpath(msgPeppolAPIResp,"/*[local-name()='PeppolAPIResponse' and namespace-uri()='http://Sp.WanHai.Schemas.PeppolAPIResponse']/*[local-name()='Timestamp' and namespace-uri()='']/text()");
                                varAPIErrorMessage = msgPeppolAPIResp.InvoiceSubmissionID;
                                varAPIDate = msgPeppolAPIResp.Timestamp;    
                            }
                            
                            varAPIErrorMessage = varAPIErrorMessage.Replace("&","&amp;");
                            varAPIErrorMessage = varAPIErrorMessage.Replace("'","''");
                            varAPIErrorMessage = varAPIErrorMessage.Replace("<","&lt;");
                            varAPIErrorMessage = varAPIErrorMessage.Replace(">","&gt;");
                            if(varAPIErrorMessage.Length > 555)
                            {
                                varAPIErrorMessage = varAPIErrorMessage.Substring(0,554);
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("bc21cd77-8769-4673-9557-b66fd809cb7d")]
                        varAPIErrorMessage = varAPIErrorMessage.Replace("&","&amp;");
                        varAPIErrorMessage = varAPIErrorMessage.Replace("'","''");
                        varAPIErrorMessage = varAPIErrorMessage.Replace("<","&lt;");
                        varAPIErrorMessage = varAPIErrorMessage.Replace(">","&gt;");
                        if(varAPIErrorMessage.Length > 1000)
                        {
                            varAPIErrorMessage = varAPIErrorMessage.Substring(0,999);
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("3f865443-5426-448d-835d-c864bece0de4")]
                        construct msgInvAPIStatusUpdReq
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("412f905b-4d2d-4cd4-8fe6-ab0a14b638c7")]
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML.LoadXml("<ns0:InterfaceWHLInvoiceStatusUpd xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:DocumentID>" + varDocId + "</ns0:DocumentID><ns0:StatusType>API</ns0:StatusType><ns0:Status>" + varAPIStatus + "</ns0:Status><ns0:StatusMessage>" + varAPIErrorMessage + "</ns0:StatusMessage><ns0:StatusDateTime>" + varAPIDate + "</ns0:StatusDateTime><ns0:PeppolInvoiceXMLPath>" + varFullXMLPath+"\\"+varDocId+".xml" + "</ns0:PeppolInvoiceXMLPath><ns0:LHDNUUID>-</ns0:LHDNUUID><ns0:LHDNLongID>-</ns0:LHDNLongID></ns0:InterfaceWHLInvoiceStatusUpd>");
                            msgInvAPIStatusUpdReq = varTempXML;
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("ae59ac49-786c-4635-b3a4-df0a3294c586")]
                        
                        if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "ShowWHLAdminLogs")) == "Yes")
                        {
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgInvAPIStatusUpdReq;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdReq",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdReq",varTempXML.OuterXml.Substring(0,29500));
                            }
                        }
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("08dd6782-e567-4370-8151-698a57b9607b")]
                        send (Port_SndRcvIALInvAPIStatusUpd.Operation_1, msgInvAPIStatusUpdReq);
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("a1e4fa2c-2416-47ee-bc3f-8cef278f7f86")]
                        receive (Port_SndRcvIALInvAPIStatusUpd.Operation_1, msgInvAPIStatusUpdResp);
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("fa478dba-3348-4c22-87d1-a25e1b73fb7e")]
                        
                        if(System.Convert.ToString(Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "ShowWHLAdminLogs")) == "Yes")
                        {
                            varTempXML = new System.Xml.XmlDocument();
                            varTempXML = msgInvAPIStatusUpdResp;
                            if(varTempXML.OuterXml.Length < 30000)
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdResp",varTempXML.OuterXml);
                            }
                            else
                            {
                                System.Diagnostics.EventLog.WriteEntry("msgInvAPIStatusUpdResp",varTempXML.OuterXml.Substring(0,29500));
                            }
                        }
                    }
                    exceptions
                    {
                        [Microsoft.XLANGs.BaseTypes.DesignerPosition("3df3d474-416c-4e9e-ab5c-d74e7bb3da40")]
                        catch (System.Exception ex)
                        {
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("e44e0985-3e99-4835-8d84-f7350a710e4c")]
                            System.Diagnostics.EventLog.WriteEntry("WHLAPIUpdateException",ex.Message);
                            varExceptionmsg = ex.Message;
                            varExceptionmsg = varExceptionmsg.Replace("&","&amp;");
                            varExceptionmsg = varExceptionmsg.Replace("'","''");
                            varExceptionmsg = varExceptionmsg.Replace("<","&lt;");
                            varExceptionmsg = varExceptionmsg.Replace(">","&gt;");
                            if(varExceptionmsg.Length > 1000)
                            {
                                varExceptionmsg = varExceptionmsg.Substring(0,999);
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("8aff2686-50bd-401c-aa99-36a18800faf9")]
                            construct msgErrorLogs
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("f11c2f85-39c0-4954-bde7-8ea1da3893e1")]
                                varTempXML = new System.Xml.XmlDocument();
                                varTempXML.LoadXml("<ns0:InterfaceWHLErrorLogs xmlns:ns0='http://schemas.microsoft.com/Sql/2008/05/TypedProcedures/dbo'><ns0:HubID>MOFGeBiz</ns0:HubID><ns0:DocumentID>" + varDocId + "</ns0:DocumentID><ns0:DocumentType>GeBizPOXML</ns0:DocumentType><ns0:DocumentNumber>" + varDocId + "</ns0:DocumentNumber><ns0:ModuleName>Process_GeBizPO_DB_Peppol</ns0:ModuleName><ns0:ExceptionType>" + ex.Source + "</ns0:ExceptionType><ns0:ErrorMessage>" + varExceptionmsg + "</ns0:ErrorMessage><ns0:VendorCode>-</ns0:VendorCode><ns0:DocumentPath>-</ns0:DocumentPath></ns0:InterfaceWHLErrorLogs>");
                                
                                msgErrorLogs.Body = varTempXML;
                                
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("b258b656-6b4e-4d31-8b8f-dc61f9749f69")]
                            send (Port_SndWHLErrorLogs.Operation_1, msgErrorLogs);
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("fcfe0a14-a794-4286-9ed7-49301795bd11")]
                            construct msgErrorEmail
                            {
                                [Microsoft.XLANGs.BaseTypes.DesignerPosition("da989505-88bb-4cd9-ae98-c984cb6b97bc")]
                                System.Diagnostics.EventLog.WriteEntry("WHLIALAPIUpdException",ex.Message);
                                
                                varEmailBody = new System.Text.StringBuilder();
                                varEmailBody.AppendLine("<html><body>");
                                varEmailBody.AppendLine("<p>WHL IAL Invoice API update failed while Updating in SESAMi.</p>");
                                varEmailBody.AppendLine("<p><b><u>Error details:</u></b></p><p>");
                                varEmailBody.AppendLine("<b>Application Name</b> : <i>Sp.Wanhai</i><br/>");
                                varEmailBody.AppendLine("<b>Process Name</b> : <i>Process_IALInvoice_PeppolAPI</i><br/>");
                                varEmailBody.AppendLine("<b>DocId</b> : <i>" + varDocId  + "</i><br/>");
                                varEmailBody.AppendLine("<b>Failure Code</b> : " + ex.Source + "<br/>");
                                varEmailBody.AppendLine("<b>Error Description</b> : <i>" + ex.Message + "</i><br/>");
                                varEmailBody.AppendLine("</body></html>");
                                msgErrorEmail.Body = new Sp.WanHai.Common.RawString(varEmailBody.ToString());
                                Sp.WanHai.Common.SMTPUtils.SetContentType(msgErrorEmail.Body,"text/html");
                                Port_SndIALErrorEmail(Microsoft.XLANGs.BaseTypes.Address) = Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "SMTPTo");
                                
                                msgErrorEmail(SMTP.From) = Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "SMTPFrom");
                                
                                msgErrorEmail(SMTP.Subject) = "Wanhai IAL Invoice API status failed while updating status for DocId: " + varDocId;
                                
                                msgErrorEmail(SMTP.EmailBodyFileCharset) = "UTF-8";
                                msgErrorEmail(SMTP.CC) = Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "SMTPCCopy");
                                msgErrorEmail(SMTP.SMTPHost)= Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "SMTPHost");
                            }
                            [Microsoft.XLANGs.BaseTypes.DesignerPosition("558bc201-2400-468f-8b17-470b09a9566e")]
                            send (Port_SndIALErrorEmail.Operation_1, msgErrorEmail);
                        }
                    }
                }
                [Microsoft.XLANGs.BaseTypes.DesignerPosition("b0d45673-cbd8-4436-84a1-acaa716d5770")]
                delay new System.TimeSpan(0,0,0,0,System.Convert.ToInt32(Sp.WanHai.Common.SSOClientHelper.Read("Sp.WanHai", "WHLAPIDelayinMS")));
            }
            [Microsoft.XLANGs.BaseTypes.DesignerPosition("253982d4-05b7-455d-96cd-c02d0925c052")]
            System.Diagnostics.EventLog.WriteEntry("WHL_IAL SESAMi API Process End","WHL_IAL SESAMi API Process Completed");
        }
    }
}

